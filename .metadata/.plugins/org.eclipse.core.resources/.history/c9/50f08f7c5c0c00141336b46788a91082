package com.comtrade.edit2014sales;

import java.util.List;

import com.comtrade.edit2014sales.QuickAction.QuickActionItem;
import com.comtrade.edit2014sales.QuickAction.QuickActionPopup;


import android.app.Activity;
import android.app.AlertDialog;
import android.app.FragmentManager.OnBackStackChangedListener;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Color;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.app.ListFragment;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;

public class ListaArtikalaFragment extends ListFragment {
	ArtikliDAO artikliDAO;
	QuickActionPopup quickActionPopup1;
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);	
		artikliDAO = new ArtikliDAO(this.getActivity());
		artikliDAO.otvoriBazu();
		
		
	}
	
	@Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		View view = inflater.inflate(R.layout.fragment_listaartikala, container, false);
		List<Artikal> artikli = artikliDAO.uzmiListuSvihArtikala();
		ArrayAdapter<Artikal> adapter = new ArrayAdapter<Artikal>(inflater.getContext(), R.layout.mojlistitem, R.id.artikal, artikli);
        setListAdapter(adapter);
        return view;
    }
	
	@Override
	public void onListItemClick(ListView l, View v, int position, long id) {
	    super.onListItemClick(l, v, position, id);
	    Log.d("selektirani item", String.valueOf(position));
	    final Artikal selektiraniArtikal = (Artikal) l.getItemAtPosition(position);
	    
	    QuickActionItem detalji    = new QuickActionItem(1, "Detalji", getResources().getDrawable(R.drawable.detalji));
        QuickActionItem uredi     = new QuickActionItem(2, "Uredi", getResources().getDrawable(R.drawable.uredi));
        QuickActionItem izbrisi  = new QuickActionItem(3, "Izbrisi", getResources().getDrawable(R.drawable.izbrisi));
        quickActionPopup1 = new QuickActionPopup(getActivity(), QuickActionPopup.HORIZONTAL);
        quickActionPopup1.addActionItem(detalji);
        quickActionPopup1.addActionItem(uredi);
        quickActionPopup1.addActionItem(izbrisi);
        quickActionPopup1.setOnActionItemClickListener(new QuickActionPopup.OnActionItemClickListener() {           
            @Override
            public void onItemClick(QuickActionPopup source, int pos, int actionId) {               
                if (actionId == 1) {
                	AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(getActivity());
                    alertDialogBuilder.setTitle("Detalji artikla: " + selektiraniArtikal.getNaziv());
                    String tijeloPoruke = "Barkod: " + String.valueOf(selektiraniArtikal.getBarkod())
                    		+ "\nNaziv: " + selektiraniArtikal.getNaziv() + "\nCijena: "
                    		+ String.valueOf(selektiraniArtikal.getCijena());
                    alertDialogBuilder.setMessage(tijeloPoruke);
                    alertDialogBuilder.setPositiveButton("Uredi",new DialogInterface.OnClickListener() {
    					public void onClick(DialogInterface dialog,int id) {
    						MainActivity.promijeniFragmentIUredi(2, selektiraniArtikal);
    					}
    				  });
                    alertDialogBuilder.setNegativeButton("Izbriši",new DialogInterface.OnClickListener() {
    					public void onClick(DialogInterface dialog,int id) {
    						izbrisiArtikal(selektiraniArtikal);
    						dialog.cancel();
    					}
    				});
                    AlertDialog alertDialog = alertDialogBuilder.create();
    				alertDialog.show();
                } else if (actionId == 2) {
                	MainActivity.promijeniFragmentIUredi(2, selektiraniArtikal);
                } else if(actionId == 3){
                	izbrisiArtikal(selektiraniArtikal);          
                }
            }
        });
        
        quickActionPopup1.show(v);
	}
	
	
	@Override
    public void setUserVisibleHint(boolean isVisibleToUser) {
        super.setUserVisibleHint(isVisibleToUser);
        if (isVisibleToUser) {
    		List<Artikal> artikli = artikliDAO.uzmiListuSvihArtikala();
    		ArrayAdapter<Artikal> adapter = new ArrayAdapter<Artikal>(getActivity(), R.layout.mojlistitem, R.id.artikal, artikli);
            setListAdapter(adapter);
        }
    }
	
	private void izbrisiArtikal(Artikal artikal) {
		Log.d("id", String.valueOf(artikal.getId()));
        Log.d("barkod", String.valueOf(artikal.getBarkod()));
        Log.d("naziv", artikal.getNaziv());
        Log.d("cijena", String.valueOf(artikal.getCijena()));
    	artikliDAO.izbrisiArtikal(artikal);
    	setUserVisibleHint(true);
        Toast.makeText(getActivity().getApplicationContext(), "Uspješno ste izbrisali artikal!", Toast.LENGTH_SHORT).show();
	}
}
