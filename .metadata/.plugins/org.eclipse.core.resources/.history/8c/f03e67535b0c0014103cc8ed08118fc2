package com.comtrade.edit2014sales;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.graphics.Color;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.app.ListFragment;
import android.text.format.DateFormat;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemLongClickListener;
import android.widget.ArrayAdapter;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

public class KasaFragment extends Fragment {
	ArtikliDAO artikliDAO;
	ListView list;
	private static final int TEXT_ID = 0;
	TextView ttotal;
	TextView tbodovi;
	ArrayAdapter adapter_racun;
	ListViewCustomAdapter adapterCustom;
	ArrayAdapter <Artikal> artikli_a;
	List<String>items_naziv;
	List<String>items_kolicina;
	private int broj =0;
	SharedPreferences preferences; 
	 Button plati;
     Intent intent;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		artikliDAO = new ArtikliDAO(this.getActivity());
        artikliDAO.otvoriBazu();
	}
	
	@Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_kasa, container, false);
       
        //lista artikala
        List<Artikal> artikli = artikliDAO.uzmiListuSvihArtikala();
        ArrayAdapter<Artikal> artikli_a = new ArrayAdapter<Artikal>(inflater.getContext(), R.layout.mojlistitem, R.id.artikal, artikli);
        ListView list_artikli = (ListView) view.findViewById(R.id.list);
        list_artikli.setAdapter(artikli_a);
        list_artikli.setBackgroundResource(R.drawable.rounded_corner_top);
      
        // lista za racun
        items_naziv = new ArrayList<String>();
        items_kolicina = new ArrayList<String>();
        ListView list = (ListView) view.findViewById(R.id.list_racun);
        adapterCustom = new ListViewCustomAdapter(getActivity(), items_naziv, items_kolicina);
        list.setAdapter(adapterCustom);
        ttotal = (TextView) view.findViewById(R.id.total);
        tbodovi = (TextView) view.findViewById(R.id.loyalty);
        
        //button platiti
        plati=(Button) view.findViewById(R.id.plati);
        plati.setOnClickListener(new OnClickListener() {       
            public void onClick(View v) {  
            	intent = new Intent(getActivity(), NFCCardActivity.class);
                startActivity(intent);
               
            }
        });
        
        //preferences
        preferences = PreferenceManager.getDefaultSharedPreferences(getActivity());
        Editor edit = preferences.edit(); 
       /* if(preferences.getString("total", "n/a")!=null)
        	Toast.makeText(getActivity(),  
           		 preferences.getString("total", "n/a"),  
                     Toast.LENGTH_LONG).show(); 
        */
        //brisanje racuna
        list.setOnItemClickListener(new OnItemClickListener() {
      	  @Override
      	  public void onItemClick(AdapterView<?> parent, View view,
      	    int position, long id) {  
            	items_naziv.clear();
        		items_kolicina.clear();
        		adapterCustom.notifyDataSetChanged();  
	             
	  
                 
            }  
        }); 
        
       
      
        ttotal.setOnClickListener(new OnClickListener() {  
            @Override  
            public void onClick(View v) {  
            	 Editor edit = preferences.edit();  
	           //  String username = preferences.getString("total", "n/a");  
	          // We will just revert the current user name and save again  
	            
	             edit.putString("total", ttotal.getText().toString());  
	             edit.commit();  
	             // A toast is a view containing a quick little message for the  
	             // user. We give a little feedback  
	             
	  
                 
            }  
        }); 
        
        
        
        
        //on item click
        list_artikli.setOnItemClickListener(new OnItemClickListener() {
        	  @Override
        	  public void onItemClick(AdapterView<?> parent, View view,
        	    int position, long id) {
        	    
        		  
        		  final Artikal selektiraniArtikal = (Artikal) parent.getItemAtPosition(position);
        		  float total=IzracunajTotal(ttotal.getText().toString(), selektiraniArtikal.getCijena(),"1"); 
                  ttotal.setText(String.valueOf(total));
                  double bodovi =IzracunajBodove(tbodovi.getText().toString(),total);
                  tbodovi.setText(String.valueOf(bodovi));
                  
                  UbaciItem(selektiraniArtikal.getNaziv(),selektiraniArtikal.getCijena(),1);
                
        	  }
        	}); 
        
        list_artikli.setOnItemLongClickListener(new OnItemLongClickListener() {
      	  @Override
      	  public boolean onItemLongClick(AdapterView<?> parent, View view,
      	    int position, long id) {
      	    
      	    
      	    
      	  final Artikal selektiraniArtikal = (Artikal) parent.getItemAtPosition(position);
          
          final EditText input = new EditText(getActivity());
      input.setId(TEXT_ID);
      
          
          
              AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(getActivity());
      alertDialogBuilder.setTitle("Artikal: " + selektiraniArtikal.getNaziv());
      String tijeloPoruke = "Kolicina:";
      alertDialogBuilder.setMessage(tijeloPoruke);
      alertDialogBuilder.setView(input);
      alertDialogBuilder.setPositiveButton("Dodaj",new DialogInterface.OnClickListener() {
                      public void onClick(DialogInterface dialog,int id) {
                    	  if(ProvjeraKolicine(input.getText().toString())){
                    		  float total=IzracunajTotal(ttotal.getText().toString(), selektiraniArtikal.getCijena(),input.getText().toString()); 
                    		  ttotal.setText(String.valueOf(total));
                    		  double bodovi =IzracunajBodove(tbodovi.getText().toString(),total);
                    		  tbodovi.setText(String.valueOf(bodovi));
                    		  UbaciItem(selektiraniArtikal.getNaziv(),selektiraniArtikal.getCijena(),Integer.parseInt(input.getText().toString()));
                    	  	}
                    	  else
                    		  Toast.makeText(getActivity(),  
                    	           		 "Unesite kolicinu!",  
                    	                     Toast.LENGTH_LONG).show(); 
                    		  
                        
                       
                        
                        
                      }
                });
      alertDialogBuilder.setNegativeButton("Zatvori",new DialogInterface.OnClickListener() {
                      public void onClick(DialogInterface dialog,int id) {
                              
                              dialog.cancel();
                      }
              });
      AlertDialog alertDialog = alertDialogBuilder.create();
              alertDialog.show();
  	    
      	    
      	    
      	    
      	    return true;
      	  }
      	});
        
         
        
        
        
        
        return view;
    }
	
	
	  
	

	public void UbaciItem(String naziv, float cijena, int kolicina)
	{
		if(items_naziv.isEmpty()){
			SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
			Date date = new Date();
			
		items_naziv.add("Racun: "+ String.valueOf(broj++));
		items_kolicina.add("Datum "+ String.valueOf(dateFormat.format(date)));
	}
		items_naziv.add(naziv+ "  ");
		items_kolicina.add(String.valueOf(kolicina)+ " X " +String.valueOf(cijena));
		adapterCustom.notifyDataSetChanged();
	}
	
	public float IzracunajTotal(String ukupna_cijena, float cijena, String kolicina)
	 {float ukupna = Float.parseFloat(ukupna_cijena);
	 int kolicina_int = Integer.parseInt(kolicina);
	 float total = cijena*kolicina_int;
	     if(ukupna_cijena.equals("0.0")){
	    	return total;
	     }
	     else{
	    	 ukupna+=total;
	    	 return ukupna;
	     }
	     }   
	
	public double IzracunajBodove(String ukupni_bodovi, float cijena)
	{double ukupni = Double.parseDouble(ukupni_bodovi);
		float bodovi = cijena/10;
		double d = Math.floor(bodovi);
		
		
	    	return d;
	    
		
		
		
	}
	
	public boolean ProvjeraKolicine(String kolicina)
	{
		if(kolicina.equals(""))
			return false;
		if(Float.valueOf(kolicina)<0)
			return false;
		return true;
	}
	
	
   
	
	
}
 